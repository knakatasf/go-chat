// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v6.32.0
// source: chat.proto

package messages

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Register a username
type Registration struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Registration) Reset() {
	*x = Registration{}
	mi := &file_chat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Registration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Registration) ProtoMessage() {}

func (x *Registration) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Registration.ProtoReflect.Descriptor instead.
func (*Registration) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{0}
}

func (x *Registration) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

// Server/system message (optionally scoped to a room)
type ServerNotice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Room          string                 `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"` // empty = not scoped to a room
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ServerNotice) Reset() {
	*x = ServerNotice{}
	mi := &file_chat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ServerNotice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerNotice) ProtoMessage() {}

func (x *ServerNotice) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerNotice.ProtoReflect.Descriptor instead.
func (*ServerNotice) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{1}
}

func (x *ServerNotice) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *ServerNotice) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

// Rooms
type RoomJoin struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // server will ignore/overwrite
	Room          string                 `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomJoin) Reset() {
	*x = RoomJoin{}
	mi := &file_chat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomJoin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomJoin) ProtoMessage() {}

func (x *RoomJoin) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomJoin.ProtoReflect.Descriptor instead.
func (*RoomJoin) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{2}
}

func (x *RoomJoin) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RoomJoin) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

type RoomLeave struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // server will ignore/overwrite
	Room          string                 `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomLeave) Reset() {
	*x = RoomLeave{}
	mi := &file_chat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomLeave) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomLeave) ProtoMessage() {}

func (x *RoomLeave) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomLeave.ProtoReflect.Descriptor instead.
func (*RoomLeave) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{3}
}

func (x *RoomLeave) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RoomLeave) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

type RoomChat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // server will overwrite with authenticated user
	Room          string                 `protobuf:"bytes,2,opt,name=room,proto3" json:"room,omitempty"`
	MessageBody   string                 `protobuf:"bytes,3,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RoomChat) Reset() {
	*x = RoomChat{}
	mi := &file_chat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RoomChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RoomChat) ProtoMessage() {}

func (x *RoomChat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RoomChat.ProtoReflect.Descriptor instead.
func (*RoomChat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{4}
}

func (x *RoomChat) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *RoomChat) GetRoom() string {
	if x != nil {
		return x.Room
	}
	return ""
}

func (x *RoomChat) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

// Direct message
type DirectChat struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          string                 `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"` // server will overwrite
	To            string                 `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	MessageBody   string                 `protobuf:"bytes,3,opt,name=message_body,json=messageBody,proto3" json:"message_body,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DirectChat) Reset() {
	*x = DirectChat{}
	mi := &file_chat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DirectChat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectChat) ProtoMessage() {}

func (x *DirectChat) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectChat.ProtoReflect.Descriptor instead.
func (*DirectChat) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{5}
}

func (x *DirectChat) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *DirectChat) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *DirectChat) GetMessageBody() string {
	if x != nil {
		return x.MessageBody
	}
	return ""
}

type Wrapper struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Msg:
	//
	//	*Wrapper_RegistrationMessage
	//	*Wrapper_ServerNotice
	//	*Wrapper_RoomJoin
	//	*Wrapper_RoomLeave
	//	*Wrapper_RoomChat
	//	*Wrapper_DirectChat
	Msg           isWrapper_Msg `protobuf_oneof:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Wrapper) Reset() {
	*x = Wrapper{}
	mi := &file_chat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Wrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wrapper) ProtoMessage() {}

func (x *Wrapper) ProtoReflect() protoreflect.Message {
	mi := &file_chat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wrapper.ProtoReflect.Descriptor instead.
func (*Wrapper) Descriptor() ([]byte, []int) {
	return file_chat_proto_rawDescGZIP(), []int{6}
}

func (x *Wrapper) GetMsg() isWrapper_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *Wrapper) GetRegistrationMessage() *Registration {
	if x != nil {
		if x, ok := x.Msg.(*Wrapper_RegistrationMessage); ok {
			return x.RegistrationMessage
		}
	}
	return nil
}

func (x *Wrapper) GetServerNotice() *ServerNotice {
	if x != nil {
		if x, ok := x.Msg.(*Wrapper_ServerNotice); ok {
			return x.ServerNotice
		}
	}
	return nil
}

func (x *Wrapper) GetRoomJoin() *RoomJoin {
	if x != nil {
		if x, ok := x.Msg.(*Wrapper_RoomJoin); ok {
			return x.RoomJoin
		}
	}
	return nil
}

func (x *Wrapper) GetRoomLeave() *RoomLeave {
	if x != nil {
		if x, ok := x.Msg.(*Wrapper_RoomLeave); ok {
			return x.RoomLeave
		}
	}
	return nil
}

func (x *Wrapper) GetRoomChat() *RoomChat {
	if x != nil {
		if x, ok := x.Msg.(*Wrapper_RoomChat); ok {
			return x.RoomChat
		}
	}
	return nil
}

func (x *Wrapper) GetDirectChat() *DirectChat {
	if x != nil {
		if x, ok := x.Msg.(*Wrapper_DirectChat); ok {
			return x.DirectChat
		}
	}
	return nil
}

type isWrapper_Msg interface {
	isWrapper_Msg()
}

type Wrapper_RegistrationMessage struct {
	RegistrationMessage *Registration `protobuf:"bytes,1,opt,name=registration_message,json=registrationMessage,proto3,oneof"`
}

type Wrapper_ServerNotice struct {
	ServerNotice *ServerNotice `protobuf:"bytes,3,opt,name=server_notice,json=serverNotice,proto3,oneof"`
}

type Wrapper_RoomJoin struct {
	RoomJoin *RoomJoin `protobuf:"bytes,10,opt,name=room_join,json=roomJoin,proto3,oneof"`
}

type Wrapper_RoomLeave struct {
	RoomLeave *RoomLeave `protobuf:"bytes,11,opt,name=room_leave,json=roomLeave,proto3,oneof"`
}

type Wrapper_RoomChat struct {
	RoomChat *RoomChat `protobuf:"bytes,12,opt,name=room_chat,json=roomChat,proto3,oneof"`
}

type Wrapper_DirectChat struct {
	DirectChat *DirectChat `protobuf:"bytes,20,opt,name=direct_chat,json=directChat,proto3,oneof"`
}

func (*Wrapper_RegistrationMessage) isWrapper_Msg() {}

func (*Wrapper_ServerNotice) isWrapper_Msg() {}

func (*Wrapper_RoomJoin) isWrapper_Msg() {}

func (*Wrapper_RoomLeave) isWrapper_Msg() {}

func (*Wrapper_RoomChat) isWrapper_Msg() {}

func (*Wrapper_DirectChat) isWrapper_Msg() {}

var File_chat_proto protoreflect.FileDescriptor

const file_chat_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"chat.proto\"*\n" +
	"\fRegistration\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\"6\n" +
	"\fServerNotice\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x12\n" +
	"\x04room\x18\x02 \x01(\tR\x04room\":\n" +
	"\bRoomJoin\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x12\n" +
	"\x04room\x18\x02 \x01(\tR\x04room\";\n" +
	"\tRoomLeave\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x12\n" +
	"\x04room\x18\x02 \x01(\tR\x04room\"]\n" +
	"\bRoomChat\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x12\n" +
	"\x04room\x18\x02 \x01(\tR\x04room\x12!\n" +
	"\fmessage_body\x18\x03 \x01(\tR\vmessageBody\"S\n" +
	"\n" +
	"DirectChat\x12\x12\n" +
	"\x04from\x18\x01 \x01(\tR\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\tR\x02to\x12!\n" +
	"\fmessage_body\x18\x03 \x01(\tR\vmessageBody\"\xbb\x02\n" +
	"\aWrapper\x12B\n" +
	"\x14registration_message\x18\x01 \x01(\v2\r.RegistrationH\x00R\x13registrationMessage\x124\n" +
	"\rserver_notice\x18\x03 \x01(\v2\r.ServerNoticeH\x00R\fserverNotice\x12(\n" +
	"\troom_join\x18\n" +
	" \x01(\v2\t.RoomJoinH\x00R\broomJoin\x12+\n" +
	"\n" +
	"room_leave\x18\v \x01(\v2\n" +
	".RoomLeaveH\x00R\troomLeave\x12(\n" +
	"\troom_chat\x18\f \x01(\v2\t.RoomChatH\x00R\broomChat\x12.\n" +
	"\vdirect_chat\x18\x14 \x01(\v2\v.DirectChatH\x00R\n" +
	"directChatB\x05\n" +
	"\x03msgB\fZ\n" +
	"./messagesb\x06proto3"

var (
	file_chat_proto_rawDescOnce sync.Once
	file_chat_proto_rawDescData []byte
)

func file_chat_proto_rawDescGZIP() []byte {
	file_chat_proto_rawDescOnce.Do(func() {
		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)))
	})
	return file_chat_proto_rawDescData
}

var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_chat_proto_goTypes = []any{
	(*Registration)(nil), // 0: Registration
	(*ServerNotice)(nil), // 1: ServerNotice
	(*RoomJoin)(nil),     // 2: RoomJoin
	(*RoomLeave)(nil),    // 3: RoomLeave
	(*RoomChat)(nil),     // 4: RoomChat
	(*DirectChat)(nil),   // 5: DirectChat
	(*Wrapper)(nil),      // 6: Wrapper
}
var file_chat_proto_depIdxs = []int32{
	0, // 0: Wrapper.registration_message:type_name -> Registration
	1, // 1: Wrapper.server_notice:type_name -> ServerNotice
	2, // 2: Wrapper.room_join:type_name -> RoomJoin
	3, // 3: Wrapper.room_leave:type_name -> RoomLeave
	4, // 4: Wrapper.room_chat:type_name -> RoomChat
	5, // 5: Wrapper.direct_chat:type_name -> DirectChat
	6, // [6:6] is the sub-list for method output_type
	6, // [6:6] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_chat_proto_init() }
func file_chat_proto_init() {
	if File_chat_proto != nil {
		return
	}
	file_chat_proto_msgTypes[6].OneofWrappers = []any{
		(*Wrapper_RegistrationMessage)(nil),
		(*Wrapper_ServerNotice)(nil),
		(*Wrapper_RoomJoin)(nil),
		(*Wrapper_RoomLeave)(nil),
		(*Wrapper_RoomChat)(nil),
		(*Wrapper_DirectChat)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_chat_proto_rawDesc), len(file_chat_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_chat_proto_goTypes,
		DependencyIndexes: file_chat_proto_depIdxs,
		MessageInfos:      file_chat_proto_msgTypes,
	}.Build()
	File_chat_proto = out.File
	file_chat_proto_goTypes = nil
	file_chat_proto_depIdxs = nil
}
